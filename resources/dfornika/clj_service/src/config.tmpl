(ns {{top/ns}}.{{main/ns}}.config
  (:require [clojure.java.io :as io]
            [aero.core :as aero]))


(defn load-config
  "Given a file path, load config from that file (aero/edn format).
   If no path provided, get the path from the `CONFIG_FILE` env var."
  ([]
   (load-config (System/getenv "CONFIG_FILE")))
  ([path]
   (let [file (io/file path)]
    (println "Loading config from:" (.getAbsolutePath file))
    (when-not (.exists file)
      (throw (ex-info "Config file not found" {:path path})))
    (when (.isDirectory file)
      (throw (ex-info "Expected config file, got directory" {:path path})))
    (aero/read-config file))))
