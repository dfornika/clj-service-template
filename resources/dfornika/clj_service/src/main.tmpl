(ns {{top/ns}}.{{main/ns}}
    (:require [clojure.data.json :as json]
              [integrant.core :as ig]
              [ring.adapter.jetty :as jetty]
              [ring.util.response :as resp])
    (:gen-class))

(def config
  {:adapter/jetty {:port 8080, :handler (ig/ref :handler/greet)}
   :handler/greet {:name "Alice"}})

(defmethod ig/init-key :adapter/jetty [_ {:keys [handler] :as opts}]
  (jetty/run-jetty handler (-> opts (dissoc :handler) (assoc :join? false))))

(defmethod ig/halt-key! :adapter/jetty [_ server]
  (.stop server))

(defmethod ig/init-key :handler/greet [_ {:keys [name]}]
  (fn [_] (resp/response (str "Hello " name))))

(defn -main
  "Initialize the system and starts the web server."
  [& args]
  (let [system (ig/init config)]))
