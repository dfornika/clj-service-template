(ns dfornika.clj-service)

(defn data-fn
  "Example data-fn handler.

  Result is merged onto existing options data."
  [data]
  ;; returning nil means no changes to options data
  ;; Input is something like:
  #_{:artifact/id "generated-service"
     :now/date "2024-01-01"
     :now/year "2024"
     :top "dfornika"
     :name "dfornika/generated-service"
     :template "dfornika/clj-service"
     :group/id "net.clojars.dfornika"
     :target-dir "build/generated-service"
     :template-dir "/home/dfornika/code/clj-service/resources/dforinka/clj_service"
     :developer "dfornika"
     :version "0.1.0-SNAPSHOT"
     :main "generated-service"
     :scm/domain "github.com"
     :scm/repo "generated-service"
     :scm/user "dfornika"
     :user "dfornika"
     :raw-name "dfornika/generated-service"}
  (println (str "data-fn returning nil"))
  nil)

(defn template-fn
  "Example template-fn handler.

  Result is used as the EDN for the template."
  [edn data]
  ;; must return the whole EDN hash map
  ;; Input is something like:
  #_{:description "FIXME: generated by the dfornika/clj-service template."
     :data-fn dfornika.clj-service/data-fn
     :template-fn dfornika.clj-service/template-fn
     :post-process-fn dfornika.clj-service/post-process-fn
     :transform [["build" ""
                  {"build.tmpl" "build.clj"
                   "deps.tmpl" "deps.edn"} :only]
                 ["src" "src/{{top/file}}"
                  {"main.tmpl" "main.clj"}]
                 ["test" "test/{{top/file}}"]]}
  (println (str "template-fn returning edn"))
  edn)

(defn post-process-fn
  "Example post-process-fn handler.

  Can programmatically modify files in the generated project."
  [edn data]
  (println "post-process-fn not modifying" (:target-dir data)))
